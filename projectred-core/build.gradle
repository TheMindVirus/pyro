buildscript
{
    repositories
    {
        maven { url = 'https://maven.minecraftforge.net' }
        mavenCentral()
    }
    dependencies
    {
        classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '5.1.+', changing: true
    }
}

plugins
{
    id 'scala'
}
apply plugin: 'net.minecraftforge.gradle'

java.toolchain.languageVersion = JavaLanguageVersion.of(17)

archivesBaseName = 'projectred-core'
group = 'com.cd.${archivesBaseName}'

mod_version = System.getenv("AUTO_GENERATED_VERSION") ?: "${mod_version}.${Instant.now().getEpochSecond()}"
version = "${mc_version}-${mod_version}"

println "Starting build of ${archivesBaseName}, Version: ${mod_version}"
println "Using Forge: ${forge_version}, for Minecraft: ${mc_version}, with Mappings: ${mappings_version}"

repositories
{
    mavenCentral()
}

minecraft
{
    mappings channel: 'snapshot', version: "${mappings_version}"
    accessTransformer = file("src/core/resources/META-INF/accesstransformer.cfg")
    runs
    {
        client
        {
            properties 'forge.logging.markers': 'SCAN,REGISTRIES,REGISTRYDUMP'
            properties 'forge.logging.console.level': 'debug'
            workingDirectory project.file('run').canonicalPath
            source sourceSets.main
        }

        server
        {
            properties 'forge.logging.markers': 'SCAN,REGISTRIES,REGISTRYDUMP'
            properties 'forge.logging.console.level': 'debug'
            workingDirectory project.file('run').canonicalPath
            source sourceSets.main
        }
    }
}

dependencies
{
    minecraft "net.minecraftforge:forge:${mc_version}-${forge_version}"

    // Scala dependencies
    implementation group: 'org.scala-lang', name: 'scala3-library_3', version: scala_version

    // ProjectRed Core dependencies
    //coreCompile "codechicken:CodeChickenLib:${mc_version}-${ccl_version}:deobf"
    //coreCompile "codechicken:CBMultipart:${mc_version}-${cbm_version}:deobf"
    implementation files("src/CodeChickenLib-1.18.2-4.1.0.1-sources.jar")
}

jar
{
    classifier "core"
    manifest { attributes(["Class-Path": "ProjectRed-Core"]) }
}